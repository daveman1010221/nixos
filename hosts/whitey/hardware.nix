# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [
    "nvme" "xhci_pci" "ahci" "thunderbolt" "usb_storage" "usbhid" "sd_mod"
  ];
  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    { device = "/dev/disk/by-uuid/9cd8a7ab-5284-42b2-b311-d90a8c3ea688";
      fsType = "f2fs";
    };

  fileSystems."/tmp" =
    { device = "/dev/disk/by-uuid/924083f6-e402-4104-9c4f-4e33985d1bbe";
      fsType = "f2fs";
    };

  fileSystems."/var" =
    { device = "/dev/disk/by-uuid/c022dacd-a1c3-4396-bbfe-a6e921623c03";
      fsType = "f2fs";
    };

  fileSystems."/home" =
    { device = "/dev/disk/by-uuid/fd16f42b-ed0f-4b7a-b631-8b3de3041b22";
      fsType = "f2fs";
    };

  fileSystems."/boot" =
    { device = "/dev/disk/by-uuid/5b92e829-7333-4602-9849-f82a645478f7";
      fsType = "ext4";
    };

  fileSystems."/boot/EFI" =
    { device = "/dev/disk/by-uuid/31F1-0CF6";
      fsType = "vfat";
      options = [ "fmask=0022" "dmask=0022" ];
    };


  # boot.initrd.luks.devices."secrets_crypt".device = "/dev/disk/by-uuid/d3271a76-9608-4580-a6c2-d5f0399f0fd5";

  swapDevices =
    [ { device = "/dev/disk/by-uuid/4710fa88-f7f7-4313-b1aa-21af96fff1bc"; }
    ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp17s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp16s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.enableAllFirmware = true;
  hardware.enableAllHardware = true;
  hardware.graphics.enable = true;
  hardware.keyboard.qmk.enable = true;

}
