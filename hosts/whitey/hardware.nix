# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

    # Ensure the initrd includes necessary modules for encryption, RAID, and filesystems
  boot.initrd.availableKernelModules = lib.mkForce [
    "nls_cp437"
    "nls_iso8859_1"
    "crypto_null"
    "cryptd"
    "sha256"
    "sha256_generic"
    "vmd"
    "cbc"

    # crypto
    "aesni_intel"     # The gold standard for FIPS 140-2/3 compliance
                      # Hardware-accelerate AES within the Intel CPU
    "gf128mul"
    "crypto_simd"
    "dm_crypt"        # LUKS encryption support for device mapper storage infrastructure
    "essiv"           # Encrypted Salt-Sector Initialization Vector is a transform for various encryption modes, mostly supporting block device encryption
    "authenc"
    "xts"             # XEX-based tweaked-codebook mode with ciphertext stealing -- like essiv, is designed specifically for block device encryption

    # filesystems
    "ext4"            # Old time linux filesystem, used on the encrypted USB boot volume. Required because grub doesn't support F2FS yet.
    "crc16"
    "mbcache"
    "jbd2"
    "f2fs"            # Flash-friendly filesystem support -- the top-layer of our storage stack
    "lz4_compress"
    "lz4hc_compress"
    "vfat"            # Windows FAT volumes, such as the FAT12 EFI partition
    "fat"

    # storage
    "nvme"            # NVME drive support
    "nvme_core"
    "nvme_auth"
    "raid0"           # Software RAID0 via mdadm
    "usb_storage"     # Generic USB storage support
    "scsi_mod"
    "scsi_common"
    "libata"
    "dm_mod"          # Device mapper infrastructure
    "dm_snapshot"
    "dm_bufio"
    "dax"
    "md_mod"

    # hardware support modules
    "ahci"            # SATA disk support
    "kvm-amd"
    "libahci"
    "sd_mod"          # SCSI disk support (/dev/sdX)
    "uas"             # USB attached SCSI (booting from USB)
    "usbcore"         # USB support
    "usbhid"
    "i2c_hid"
    "hid_multitouch"
    "hid_sensor_hub"
    "intel_ishtp_hid"
    "hid_generic"
    "xhci_hcd"        # USB 3.x support
    "xhci_pci"        # USB 3.x support
    "thunderbolt"
  ];

  # Define LUKS devices, including the encrypted /boot and NVMe devices
  boot.initrd.luks.cryptoModules = [
    "aesni_intel"
    "cbc"
    "cryptd"
    "crypto_null"
    "crypto_simd"
    "essiv"
    "gf128mul"
    "sha256"
    "sha256_generic"
    "xts"
  ];

  boot.initrd.kernelModules = [
    "kvm-amd"
  ];

  boot.initrd.systemd.enable = true;
  boot.initrd.systemd.emergencyAccess = true;

  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = true;
  hardware.enableAllFirmware = true;
  hardware.enableAllHardware = true;
  hardware.graphics.enable = true;
  hardware.keyboard.qmk.enable = true;
}
