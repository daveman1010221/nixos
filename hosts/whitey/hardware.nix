# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [
    "aesni_intel"
    "aes_x86_64"
    "ahci"
    "cbc"
    "cryptd"
    "crypto_simd"
    "dm_crypt"
    "dm_mod"
    "dm_snapshot"
    "encrypted_keys"
    "gf128mul"
    "kvm-amd"
    "nvme"
    "sd_mod"
    "sha256_generic"
    "thunderbolt"
    "trusted"
    "usbhid"
    "usb_storage"
    "xhci_pci"
    "xts"
  ];

  boot.initrd.kernelModules = [
    "aesni_intel"
    "aes_x86_64"
    "ahci"
    "cbc"
    "cryptd"
    "crypto_simd"
    "dm_crypt"
    "dm_mod"
    "dm_snapshot"
    "encrypted_keys"
    "gf128mul"
    "kvm-amd"
    "nvme"
    "sd_mod"
    "sha256_generic"
    "thunderbolt"
    "trusted"
    "usbhid"
    "usb_storage"
    "xhci_pci"
    "xts"
  ];

  boot.initrd.luks.cryptoModules = [
    "dm-crypt"
    "aes"
    "aes_x86_64"
    "xts"
    "cbc"
    "gcm"
    "ghash"
    "sha1"
    "sha1"
    "sha256"
    "sha512"
    "cryptd"
    "crc32c-intel"
  ];

  boot.initrd.systemd.enable = true;
  boot.initrd.systemd.emergencyAccess = true;

  boot.kernelModules = [ "kvm-amd" ];
  boot.extraModulePackages = [ ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp17s0.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp16s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
  hardware.enableAllFirmware = true;
  hardware.enableAllHardware = true;
  hardware.graphics.enable = true;
  hardware.keyboard.qmk.enable = true;

}
